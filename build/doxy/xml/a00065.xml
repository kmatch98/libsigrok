<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="a00065" kind="file" language="C++">
    <compoundname>transform.c</compoundname>
    <includes local="no">config.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="a00050" local="no">libsigrok/libsigrok.h</includes>
    <includes local="yes">libsigrok-internal.h</includes>
    <incdepgraph>
      <node id="12">
        <label>libsigrok-internal.h</label>
      </node>
      <node id="7">
        <label>stdint.h</label>
      </node>
      <node id="11">
        <label>libsigrok/version.h</label>
        <link refid="a00056"/>
      </node>
      <node id="1">
        <label>src/transform/transform.c</label>
        <link refid="a00065"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>string.h</label>
      </node>
      <node id="9">
        <label>glib.h</label>
      </node>
      <node id="6">
        <label>sys/time.h</label>
      </node>
      <node id="4">
        <label>libsigrok/libsigrok.h</label>
        <link refid="a00050"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>config.h</label>
      </node>
      <node id="5">
        <label>stdio.h</label>
      </node>
      <node id="10">
        <label>libsigrok/proto.h</label>
        <link refid="a00053"/>
      </node>
      <node id="8">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="a00082_1gad28a142eed4d8acefd702b82efbf6955" prot="public" static="yes" mutable="no">
        <type>const struct sr_transform_module *</type>
        <definition>const struct sr_transform_module* transform_module_list[]</definition>
        <argsstring>[]</argsstring>
        <name>transform_module_list</name>
        <initializer>= {
	&amp;transform_nop,
	&amp;transform_scale,
	&amp;transform_invert,
	NULL,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/transform/transform.c" line="50" column="39" bodyfile="src/transform/transform.c" bodystart="50" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="a00082_1ga3d6573f5a163c1c5dde57408d4149e5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const struct sr_transform_module **</type>
        <definition>const struct sr_transform_module** sr_transform_list</definition>
        <argsstring>(void)</argsstring>
        <name>sr_transform_list</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns a NULL-terminated list of all available transform modules. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>0.4.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/transform/transform.c" line="62" column="33" bodyfile="src/transform/transform.c" bodystart="62" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="a00082_1ga19a02c79476c3b4d08946fe9ca1d2a6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* sr_transform_id_get</definition>
        <argsstring>(const struct sr_transform_module *tmod)</argsstring>
        <name>sr_transform_id_get</name>
        <param>
          <type>const struct sr_transform_module *</type>
          <declname>tmod</declname>
        </param>
        <briefdescription>
<para>Returns the specified transform module&apos;s ID. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>0.4.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/transform/transform.c" line="72" column="13" bodyfile="src/transform/transform.c" bodystart="72" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="a00082_1ga43638b933fdb0cff24e9b4c3ae60fa06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* sr_transform_name_get</definition>
        <argsstring>(const struct sr_transform_module *tmod)</argsstring>
        <name>sr_transform_name_get</name>
        <param>
          <type>const struct sr_transform_module *</type>
          <declname>tmod</declname>
        </param>
        <briefdescription>
<para>Returns the specified transform module&apos;s name. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>0.4.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/transform/transform.c" line="87" column="13" bodyfile="src/transform/transform.c" bodystart="87" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="a00082_1ga213ab97732cb4a1aee5f18df17c60434" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* sr_transform_description_get</definition>
        <argsstring>(const struct sr_transform_module *tmod)</argsstring>
        <name>sr_transform_description_get</name>
        <param>
          <type>const struct sr_transform_module *</type>
          <declname>tmod</declname>
        </param>
        <briefdescription>
<para>Returns the specified transform module&apos;s description. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>0.4.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/transform/transform.c" line="102" column="13" bodyfile="src/transform/transform.c" bodystart="102" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="a00082_1ga0e58f96b92dd90fef598491c418a4e33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const struct sr_transform_module *</type>
        <definition>const struct sr_transform_module* sr_transform_find</definition>
        <argsstring>(const char *id)</argsstring>
        <name>sr_transform_find</name>
        <param>
          <type>const char *</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Return the transform module with the specified ID, or NULL if no module with that ID is found. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>0.4.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/transform/transform.c" line="118" column="33" bodyfile="src/transform/transform.c" bodystart="118" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="a00082_1ga7333904e22a5229921e2e2517a7046c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const struct <ref refid="a00154" kindref="compound">sr_option</ref> **</type>
        <definition>const struct sr_option** sr_transform_options_get</definition>
        <argsstring>(const struct sr_transform_module *tmod)</argsstring>
        <name>sr_transform_options_get</name>
        <param>
          <type>const struct sr_transform_module *</type>
          <declname>tmod</declname>
        </param>
        <briefdescription>
<para>Returns a NULL-terminated array of struct <ref refid="a00154" kindref="compound">sr_option</ref>, or NULL if the module takes no options. </para>
        </briefdescription>
        <detaileddescription>
<para>Each call to this function must be followed by a call to <ref refid="a00082_1ga14e80f34546c57130e9af030fae2b077" kindref="member">sr_transform_options_free()</ref>.</para>
<para><simplesect kind="since"><para>0.4.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/transform/transform.c" line="139" column="23" bodyfile="src/transform/transform.c" bodystart="139" bodyend="158"/>
        <references refid="a00154_1afada45d978757a68c202595ce6ceb8b7" compoundref="a00050" startline="561">sr_option::id</references>
      </memberdef>
      <memberdef kind="function" id="a00082_1ga14e80f34546c57130e9af030fae2b077" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sr_transform_options_free</definition>
        <argsstring>(const struct sr_option **options)</argsstring>
        <name>sr_transform_options_free</name>
        <param>
          <type>const struct <ref refid="a00154" kindref="compound">sr_option</ref> **</type>
          <declname>options</declname>
        </param>
        <briefdescription>
<para>After a call to <ref refid="a00082_1ga7333904e22a5229921e2e2517a7046c0" kindref="member">sr_transform_options_get()</ref>, this function cleans up all resources returned by that call. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>0.4.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/transform/transform.c" line="166" column="7" bodyfile="src/transform/transform.c" bodystart="166" bodyend="185"/>
        <references refid="a00154_1a9cd94aff6f0b88deb90de546009ec62d" compoundref="a00050" startline="567">sr_option::def</references>
        <references refid="a00154_1a08fc98c220b8e4230c13ca58e85402c2" compoundref="a00050" startline="569">sr_option::values</references>
      </memberdef>
      <memberdef kind="function" id="a00082_1gad3e048363e44899d058e7ca1a62f942a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const struct sr_transform *</type>
        <definition>const struct sr_transform* sr_transform_new</definition>
        <argsstring>(const struct sr_transform_module *tmod, GHashTable *options, const struct sr_dev_inst *sdi)</argsstring>
        <name>sr_transform_new</name>
        <param>
          <type>const struct sr_transform_module *</type>
          <declname>tmod</declname>
        </param>
        <param>
          <type>GHashTable *</type>
          <declname>options</declname>
        </param>
        <param>
          <type>const struct sr_dev_inst *</type>
          <declname>sdi</declname>
        </param>
        <briefdescription>
<para>Create a new transform instance using the specified transform module. </para>
        </briefdescription>
        <detaileddescription>
<para><computeroutput>options</computeroutput> is a *GHashTable with the keys corresponding with the module options&apos; <computeroutput>id</computeroutput> field. The values should be GVariant pointers with sunk * references, of the same GVariantType as the option&apos;s default value.</para>
<para>The sr_dev_inst passed in can be used by the instance to determine channel names, samplerate, and so on.</para>
<para><simplesect kind="since"><para>0.4.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/transform/transform.c" line="200" column="26" bodyfile="src/transform/transform.c" bodystart="200" bodyend="265"/>
        <references refid="a00154_1a9cd94aff6f0b88deb90de546009ec62d" compoundref="a00050" startline="567">sr_option::def</references>
        <references refid="a00154_1afada45d978757a68c202595ce6ceb8b7" compoundref="a00050" startline="561">sr_option::id</references>
        <references refid="a00050_1af94f33f23c5855e3e429bd2ca01e3b95aa35b06e07345c41f0102c255c9cd0bf1" compoundref="a00050" startline="67">SR_OK</references>
      </memberdef>
      <memberdef kind="function" id="a00082_1gac86732ac317991b2b859fde11f5bf9eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sr_transform_free</definition>
        <argsstring>(const struct sr_transform *t)</argsstring>
        <name>sr_transform_free</name>
        <param>
          <type>const struct sr_transform *</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Free the specified transform instance and all associated resources. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>0.4.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/transform/transform.c" line="272" column="6" bodyfile="src/transform/transform.c" bodystart="272" bodyend="285"/>
        <references refid="a00050_1af94f33f23c5855e3e429bd2ca01e3b95a214df8baf519bba79a1b48d364be3f20" compoundref="a00050" startline="70">SR_ERR_ARG</references>
        <references refid="a00050_1af94f33f23c5855e3e429bd2ca01e3b95aa35b06e07345c41f0102c255c9cd0bf1" compoundref="a00050" startline="67">SR_OK</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Transform module handling. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/transform/transform.c"/>
  </compounddef>
</doxygen>
