<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="a00026" kind="file" language="C++">
    <compoundname>log.c</compoundname>
    <includes local="no">config.h</includes>
    <includes local="no">stdarg.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">glib/gprintf.h</includes>
    <includes refid="a00050" local="no">libsigrok/libsigrok.h</includes>
    <includes local="yes">libsigrok-internal.h</includes>
    <incdepgraph>
      <node id="3">
        <label>stdarg.h</label>
      </node>
      <node id="13">
        <label>libsigrok-internal.h</label>
      </node>
      <node id="8">
        <label>stdint.h</label>
      </node>
      <node id="12">
        <label>libsigrok/version.h</label>
        <link refid="a00056"/>
      </node>
      <node id="1">
        <label>src/log.c</label>
        <link refid="a00026"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>glib/gprintf.h</label>
      </node>
      <node id="10">
        <label>glib.h</label>
      </node>
      <node id="7">
        <label>sys/time.h</label>
      </node>
      <node id="6">
        <label>libsigrok/libsigrok.h</label>
        <link refid="a00050"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>config.h</label>
      </node>
      <node id="4">
        <label>stdio.h</label>
      </node>
      <node id="11">
        <label>libsigrok/proto.h</label>
        <link refid="a00053"/>
      </node>
      <node id="9">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="a00074_1gae47dc404dd0450cbe82ef5bf6804a485" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int cur_loglevel</definition>
        <argsstring></argsstring>
        <name>cur_loglevel</name>
        <initializer>= <ref refid="a00050_1acaffaae3814c9ca4febd6490521645c9ad5ebf8d2592a3dfbcd6ec2a79e0dfe31" kindref="member">SR_LOG_WARN</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/log.c" line="46" column="12" bodyfile="src/log.c" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a00074_1ga1e1cfbf1450044332675705ba344111e" prot="public" static="yes" mutable="no">
        <type><ref refid="a00053_1a89f99efa4192e3bf48461c3bf178241b" kindref="member">sr_log_callback</ref></type>
        <definition>sr_log_callback sr_log_cb</definition>
        <argsstring></argsstring>
        <name>sr_log_cb</name>
        <initializer>= sr_logv</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/log.c" line="53" column="24" bodyfile="src/log.c" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a00074_1ga6e701597b07e384c0f461917ad2e9506" prot="public" static="yes" mutable="no">
        <type>void *</type>
        <definition>void* sr_log_cb_data</definition>
        <argsstring></argsstring>
        <name>sr_log_cb_data</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/log.c" line="59" column="13" bodyfile="src/log.c" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a00074_1gadf712f0e3d72f3f8f0922b2cc374c8c3" prot="public" static="yes" mutable="no">
        <type>int64_t</type>
        <definition>int64_t sr_log_start_time</definition>
        <argsstring></argsstring>
        <name>sr_log_start_time</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/log.c" line="64" column="16" bodyfile="src/log.c" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="a00074_1ga99190e9c9266cd90b04feda2f62840ed" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int sr_logv</definition>
        <argsstring>(void *cb_data, int loglevel, const char *format, va_list args)</argsstring>
        <name>sr_logv</name>
        <param>
          <type>void *</type>
          <declname>cb_data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>loglevel</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/log.c" line="185" column="12" bodyfile="src/log.c" bodystart="185" bodyend="232" declfile="src/log.c" declline="49" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="a00074_1ga2eff466cec6a339d9a147eac65b74a97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sr_log_loglevel_set</definition>
        <argsstring>(int loglevel)</argsstring>
        <name>sr_log_loglevel_set</name>
        <param>
          <type>int</type>
          <declname>loglevel</declname>
        </param>
        <briefdescription>
<para>Set the libsigrok loglevel. </para>
        </briefdescription>
        <detaileddescription>
<para>This influences the amount of log messages (debug messages, error messages, and so on) libsigrok will output. Using SR_LOG_NONE disables all messages.</para>
<para>Note that this function itself will also output log messages. After the loglevel has changed, it will output a debug message with SR_LOG_DBG for example. Whether this message is shown depends on the (new) loglevel.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>loglevel</parametername>
</parameternamelist>
<parameterdescription>
<para>The loglevel to set (SR_LOG_NONE, SR_LOG_ERR, SR_LOG_WARN, SR_LOG_INFO, SR_LOG_DBG, or SR_LOG_SPEW).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SR_OK upon success, SR_ERR_ARG upon invalid loglevel.</para>
</simplesect>
<simplesect kind="since"><para>0.1.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/log.c" line="83" column="6" bodyfile="src/log.c" bodystart="83" bodyend="98"/>
        <references refid="a00050_1af94f33f23c5855e3e429bd2ca01e3b95a214df8baf519bba79a1b48d364be3f20" compoundref="a00050" startline="70">SR_ERR_ARG</references>
        <references refid="a00050_1acaffaae3814c9ca4febd6490521645c9a6d4887faf76794cb103dc13a01a41eff" compoundref="a00050" startline="107">SR_LOG_SPEW</references>
      </memberdef>
      <memberdef kind="function" id="a00074_1ga5039ee00076e2deead00f8c14d9063fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sr_log_loglevel_get</definition>
        <argsstring>(void)</argsstring>
        <name>sr_log_loglevel_get</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get the libsigrok loglevel. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The currently configured libsigrok loglevel.</para>
</simplesect>
<simplesect kind="since"><para>0.1.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/log.c" line="107" column="6" bodyfile="src/log.c" bodystart="107" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="a00074_1ga4240b8fe79be72ef758f40f9acbd4316" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sr_log_callback_set</definition>
        <argsstring>(sr_log_callback cb, void *cb_data)</argsstring>
        <name>sr_log_callback_set</name>
        <param>
          <type><ref refid="a00053_1a89f99efa4192e3bf48461c3bf178241b" kindref="member">sr_log_callback</ref></type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>cb_data</declname>
        </param>
        <briefdescription>
<para>Set the libsigrok log callback to the specified function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Function pointer to the log callback function to use. Must not be NULL. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to private data to be passed on. This can be used by the caller to pass arbitrary data to the log functions. This pointer is only stored or passed on by libsigrok, and is never used or interpreted in any way. The pointer is allowed to be NULL if the caller doesn&apos;t need/want to pass any data.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SR_OK upon success, SR_ERR_ARG upon invalid arguments.</para>
</simplesect>
<simplesect kind="since"><para>0.3.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/log.c" line="127" column="6" bodyfile="src/log.c" bodystart="127" bodyend="140"/>
        <references refid="a00050_1af94f33f23c5855e3e429bd2ca01e3b95a214df8baf519bba79a1b48d364be3f20" compoundref="a00050" startline="70">SR_ERR_ARG</references>
      </memberdef>
      <memberdef kind="function" id="a00074_1gae7758b06f7eab52af8cf07b90a01a216" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sr_log_callback_set_default</definition>
        <argsstring>(void)</argsstring>
        <name>sr_log_callback_set_default</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Set the libsigrok log callback to the default built-in one. </para>
        </briefdescription>
        <detaileddescription>
<para>Additionally, the internal &apos;sr_log_cb_data&apos; pointer is set to NULL.</para>
<para><simplesect kind="return"><para>SR_OK upon success, a negative error code otherwise.</para>
</simplesect>
<simplesect kind="since"><para>0.1.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/log.c" line="151" column="6" bodyfile="src/log.c" bodystart="151" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="a00074_1gad554aa783e2453ecdeb2d50e4be231c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sr_log_callback_get</definition>
        <argsstring>(sr_log_callback *cb, void **cb_data)</argsstring>
        <name>sr_log_callback_get</name>
        <param>
          <type><ref refid="a00053_1a89f99efa4192e3bf48461c3bf178241b" kindref="member">sr_log_callback</ref> *</type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void **</type>
          <declname>cb_data</declname>
        </param>
        <briefdescription>
<para>Get the libsigrok log callback routine and callback data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a function pointer to receive the log callback function. Optional, can be NULL. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">cb_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a void pointer to receive the log callback&apos;s additional arguments. Optional, can be NULL.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SR_OK upon success.</para>
</simplesect>
<simplesect kind="since"><para>0.6.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/log.c" line="175" column="6" bodyfile="src/log.c" bodystart="175" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="a00074_1ga5e2e615d42df5e21d28c99992a063346" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="a00050_1a543a61499eead2576f48b70fbc336e71" kindref="member">SR_PRIV</ref> int</type>
        <definition>SR_PRIV int sr_log</definition>
        <argsstring>(int loglevel, const char *format,...)</argsstring>
        <name>sr_log</name>
        <param>
          <type>int</type>
          <declname>loglevel</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/log.c" line="235" column="13" bodyfile="src/log.c" bodystart="235" bodyend="249"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Controlling the libsigrok message logging functionality. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/log.c"/>
  </compounddef>
</doxygen>
