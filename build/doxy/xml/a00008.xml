<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="a00008" kind="file" language="C++">
    <compoundname>binary_helpers.c</compoundname>
    <includes local="no">config.h</includes>
    <includes local="no">glib.h</includes>
    <includes refid="a00050" local="no">libsigrok/libsigrok.h</includes>
    <includes local="yes">libsigrok-internal.h</includes>
    <incdepgraph>
      <node id="11">
        <label>libsigrok-internal.h</label>
      </node>
      <node id="1">
        <label>src/binary_helpers.c</label>
        <link refid="a00008"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>stdint.h</label>
      </node>
      <node id="10">
        <label>libsigrok/version.h</label>
        <link refid="a00056"/>
      </node>
      <node id="3">
        <label>glib.h</label>
      </node>
      <node id="6">
        <label>sys/time.h</label>
      </node>
      <node id="4">
        <label>libsigrok/libsigrok.h</label>
        <link refid="a00050"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>config.h</label>
      </node>
      <node id="5">
        <label>stdio.h</label>
      </node>
      <node id="9">
        <label>libsigrok/proto.h</label>
        <link refid="a00053"/>
      </node>
      <node id="8">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="a00008_1a9c4250aa8b0fe1d3bf63f5ea779d215a" prot="public" static="no">
        <name>VALUE_TYPE</name>
        <param><defname>T</defname></param>
        <param><defname>R</defname></param>
        <param><defname>L</defname></param>
        <initializer>	case T:						\
		if (spec-&gt;offset + (L) &gt; length)	\
			return <ref refid="a00050_1af94f33f23c5855e3e429bd2ca01e3b95aeee8ec5930fa84cfcbf2e9772cd05eed" kindref="member">SR_ERR_DATA</ref>;		\
		value = R(data + spec-&gt;offset);		\
		break</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/binary_helpers.c" line="32" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="a00008_1a4e490c4e613b30ea15abbee86a154184" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="a00050_1a543a61499eead2576f48b70fbc336e71" kindref="member">SR_PRIV</ref> int</type>
        <definition>SR_PRIV int bv_get_value</definition>
        <argsstring>(float *out, const struct binary_value_spec *spec, const void *data, size_t length)</argsstring>
        <name>bv_get_value</name>
        <param>
          <type>float *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const struct binary_value_spec *</type>
          <declname>spec</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/binary_helpers.c" line="25" column="13" bodyfile="src/binary_helpers.c" bodystart="25" bodyend="60"/>
        <references refid="a00050_1af94f33f23c5855e3e429bd2ca01e3b95a214df8baf519bba79a1b48d364be3f20" compoundref="a00050" startline="70">SR_ERR_ARG</references>
        <references refid="a00050_1af94f33f23c5855e3e429bd2ca01e3b95aa35b06e07345c41f0102c255c9cd0bf1" compoundref="a00050" startline="67">SR_OK</references>
        <references refid="a00008_1a9c4250aa8b0fe1d3bf63f5ea779d215a">VALUE_TYPE</references>
        <referencedby refid="a00008_1ac235f13896da2fabd8bc61978a5f0968" compoundref="a00008" startline="62" endline="105">bv_send_analog_channel</referencedby>
      </memberdef>
      <memberdef kind="function" id="a00008_1ac235f13896da2fabd8bc61978a5f0968" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="a00050_1a543a61499eead2576f48b70fbc336e71" kindref="member">SR_PRIV</ref> int</type>
        <definition>SR_PRIV int bv_send_analog_channel</definition>
        <argsstring>(const struct sr_dev_inst *sdi, struct sr_channel *ch, const struct binary_analog_channel *bac, const void *data, size_t length)</argsstring>
        <name>bv_send_analog_channel</name>
        <param>
          <type>const struct sr_dev_inst *</type>
          <declname>sdi</declname>
        </param>
        <param>
          <type>struct <ref refid="a00162" kindref="compound">sr_channel</ref> *</type>
          <declname>ch</declname>
        </param>
        <param>
          <type>const struct binary_analog_channel *</type>
          <declname>bac</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/binary_helpers.c" line="62" column="13" bodyfile="src/binary_helpers.c" bodystart="62" bodyend="105"/>
        <references refid="a00008_1a4e490c4e613b30ea15abbee86a154184" compoundref="a00008" startline="25" endline="60">bv_get_value</references>
        <references refid="a00050_1acb492d2b26747a2155cb1c8f251727b0ac2ee6953a14f91d2980418d781d4d066" compoundref="a00050" startline="177">SR_DF_ANALOG</references>
        <references refid="a00050_1af94f33f23c5855e3e429bd2ca01e3b95aa35b06e07345c41f0102c255c9cd0bf1" compoundref="a00050" startline="67">SR_OK</references>
        <references refid="a00122_1a1ad7f2dacc022262d942eeccf5d602f8" compoundref="a00050" startline="494">sr_datafeed_packet::type</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/binary_helpers.c"/>
  </compounddef>
</doxygen>
