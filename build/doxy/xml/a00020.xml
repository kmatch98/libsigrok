<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="a00020" kind="file" language="C++">
    <compoundname>error.c</compoundname>
    <includes local="no">config.h</includes>
    <includes refid="a00050" local="no">libsigrok/libsigrok.h</includes>
    <incdepgraph>
      <node id="6">
        <label>stdint.h</label>
      </node>
      <node id="10">
        <label>libsigrok/version.h</label>
        <link refid="a00056"/>
      </node>
      <node id="8">
        <label>glib.h</label>
      </node>
      <node id="5">
        <label>sys/time.h</label>
      </node>
      <node id="3">
        <label>libsigrok/libsigrok.h</label>
        <link refid="a00050"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>config.h</label>
      </node>
      <node id="4">
        <label>stdio.h</label>
      </node>
      <node id="9">
        <label>libsigrok/proto.h</label>
        <link refid="a00053"/>
      </node>
      <node id="7">
        <label>inttypes.h</label>
      </node>
      <node id="1">
        <label>src/error.c</label>
        <link refid="a00020"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="a00072_1ga7aacfdde4d4f0b3a64d50797f3c10103" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* sr_strerror</definition>
        <argsstring>(int error_code)</argsstring>
        <name>sr_strerror</name>
        <param>
          <type>int</type>
          <declname>error_code</declname>
        </param>
        <briefdescription>
<para>Return a human-readable error string for the given libsigrok error code. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>error_code</parametername>
</parameternamelist>
<parameterdescription>
<para>A libsigrok error code number, such as SR_ERR_MALLOC.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A const string containing a short, human-readable (English) description of the error, such as &quot;memory allocation error&quot;. The string must NOT be free&apos;d by the caller!</para>
</simplesect>
<simplesect kind="see"><para><ref refid="a00072_1ga7b17e89928756a8282c4a085762dcf37" kindref="member">sr_strerror_name</ref></para>
</simplesect>
<simplesect kind="since"><para>0.2.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/error.c" line="53" column="13" bodyfile="src/error.c" bodystart="53" bodyend="88"/>
        <references refid="a00050_1af94f33f23c5855e3e429bd2ca01e3b95a132553bf1f479756d2590f9fd40bb289" compoundref="a00050" startline="68">SR_ERR</references>
        <references refid="a00050_1af94f33f23c5855e3e429bd2ca01e3b95a214df8baf519bba79a1b48d364be3f20" compoundref="a00050" startline="70">SR_ERR_ARG</references>
        <references refid="a00050_1af94f33f23c5855e3e429bd2ca01e3b95a73d02d78044acbb231b3c2db09ac9073" compoundref="a00050" startline="71">SR_ERR_BUG</references>
        <references refid="a00050_1af94f33f23c5855e3e429bd2ca01e3b95a6c0e2e6dab8298c353668d1060989f71" compoundref="a00050" startline="76">SR_ERR_CHANNEL_GROUP</references>
        <references refid="a00050_1af94f33f23c5855e3e429bd2ca01e3b95aeee8ec5930fa84cfcbf2e9772cd05eed" compoundref="a00050" startline="77">SR_ERR_DATA</references>
        <references refid="a00050_1af94f33f23c5855e3e429bd2ca01e3b95a876e62a9b4ae742236909f3cc639478a" compoundref="a00050" startline="74">SR_ERR_DEV_CLOSED</references>
        <references refid="a00050_1af94f33f23c5855e3e429bd2ca01e3b95a5df4d703fdb8c7b848b3f6187aa75473" compoundref="a00050" startline="78">SR_ERR_IO</references>
        <references refid="a00050_1af94f33f23c5855e3e429bd2ca01e3b95a2b09e88e11f188acddd045e8589ea774" compoundref="a00050" startline="69">SR_ERR_MALLOC</references>
        <references refid="a00050_1af94f33f23c5855e3e429bd2ca01e3b95a6f2b8ec909e8f5137db63a14fad0f67c" compoundref="a00050" startline="73">SR_ERR_NA</references>
        <references refid="a00050_1af94f33f23c5855e3e429bd2ca01e3b95a3f7596ab3e2406b3fd37e88bbeaaf0b2" compoundref="a00050" startline="72">SR_ERR_SAMPLERATE</references>
        <references refid="a00050_1af94f33f23c5855e3e429bd2ca01e3b95adb701ac55b29396e80265d7f950cb113" compoundref="a00050" startline="75">SR_ERR_TIMEOUT</references>
        <references refid="a00050_1af94f33f23c5855e3e429bd2ca01e3b95aa35b06e07345c41f0102c255c9cd0bf1" compoundref="a00050" startline="67">SR_OK</references>
        <referencedby refid="a00076_1gac037d037baecc2b3679044d2b7c3bad3" compoundref="a00035" startline="318" endline="377">sr_session_dev_add</referencedby>
      </memberdef>
      <memberdef kind="function" id="a00072_1ga7b17e89928756a8282c4a085762dcf37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* sr_strerror_name</definition>
        <argsstring>(int error_code)</argsstring>
        <name>sr_strerror_name</name>
        <param>
          <type>int</type>
          <declname>error_code</declname>
        </param>
        <briefdescription>
<para>Return the &quot;name&quot; string of the given libsigrok error code. </para>
        </briefdescription>
        <detaileddescription>
<para>For example, the &quot;name&quot; of the SR_ERR_MALLOC error code is &quot;SR_ERR_MALLOC&quot;, the name of the SR_OK code is &quot;SR_OK&quot;, and so on.</para>
<para>This function can be used for various purposes where the &quot;name&quot; string of a libsigrok error code is useful.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>error_code</parametername>
</parameternamelist>
<parameterdescription>
<para>A libsigrok error code number, such as SR_ERR_MALLOC.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A const string containing the &quot;name&quot; of the error code as string. The string must NOT be free&apos;d by the caller!</para>
</simplesect>
<simplesect kind="see"><para><ref refid="a00072_1ga7aacfdde4d4f0b3a64d50797f3c10103" kindref="member">sr_strerror</ref></para>
</simplesect>
<simplesect kind="since"><para>0.2.0 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/error.c" line="108" column="13" bodyfile="src/error.c" bodystart="108" bodyend="143"/>
        <references refid="a00050_1af94f33f23c5855e3e429bd2ca01e3b95a132553bf1f479756d2590f9fd40bb289" compoundref="a00050" startline="68">SR_ERR</references>
        <references refid="a00050_1af94f33f23c5855e3e429bd2ca01e3b95a214df8baf519bba79a1b48d364be3f20" compoundref="a00050" startline="70">SR_ERR_ARG</references>
        <references refid="a00050_1af94f33f23c5855e3e429bd2ca01e3b95a73d02d78044acbb231b3c2db09ac9073" compoundref="a00050" startline="71">SR_ERR_BUG</references>
        <references refid="a00050_1af94f33f23c5855e3e429bd2ca01e3b95a6c0e2e6dab8298c353668d1060989f71" compoundref="a00050" startline="76">SR_ERR_CHANNEL_GROUP</references>
        <references refid="a00050_1af94f33f23c5855e3e429bd2ca01e3b95aeee8ec5930fa84cfcbf2e9772cd05eed" compoundref="a00050" startline="77">SR_ERR_DATA</references>
        <references refid="a00050_1af94f33f23c5855e3e429bd2ca01e3b95a876e62a9b4ae742236909f3cc639478a" compoundref="a00050" startline="74">SR_ERR_DEV_CLOSED</references>
        <references refid="a00050_1af94f33f23c5855e3e429bd2ca01e3b95a5df4d703fdb8c7b848b3f6187aa75473" compoundref="a00050" startline="78">SR_ERR_IO</references>
        <references refid="a00050_1af94f33f23c5855e3e429bd2ca01e3b95a2b09e88e11f188acddd045e8589ea774" compoundref="a00050" startline="69">SR_ERR_MALLOC</references>
        <references refid="a00050_1af94f33f23c5855e3e429bd2ca01e3b95a6f2b8ec909e8f5137db63a14fad0f67c" compoundref="a00050" startline="73">SR_ERR_NA</references>
        <references refid="a00050_1af94f33f23c5855e3e429bd2ca01e3b95a3f7596ab3e2406b3fd37e88bbeaaf0b2" compoundref="a00050" startline="72">SR_ERR_SAMPLERATE</references>
        <references refid="a00050_1af94f33f23c5855e3e429bd2ca01e3b95adb701ac55b29396e80265d7f950cb113" compoundref="a00050" startline="75">SR_ERR_TIMEOUT</references>
        <references refid="a00050_1af94f33f23c5855e3e429bd2ca01e3b95aa35b06e07345c41f0102c255c9cd0bf1" compoundref="a00050" startline="67">SR_OK</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Error handling in libsigrok. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/error.c"/>
  </compounddef>
</doxygen>
